#!/bin/bash
####################################################################
# Elog is a depedency of Eternal Scanner (Denveloped by peterpt)   #
#          https://github.com/peterpt/eternal_scanner              #
####################################################################
#setup colors
green='\033[92m'
yellow='\e[0;33m'
orange='\e[38;5;166m'

# Default directory for eternal scanner data 
defdir="/usr/local/share/Eternal_Scanner"

# When CTRL+C is pressed
trap ctrl_c INT
function ctrl_c() {
kill "$PID" >/dev/null 2>&1
}
echo -e "$orange" "+-------------------------+"
echo -e "$orange" "|$green Metasploit IPS Checkout$orange |"
echo -e "$orange" "+-------------------------+"
echo -e "$orange" "|$yellow      Please wait       $orange |"
echo -e "$orange" "+-------------------------+"

# Timer start value to wait for msflog file generated by metasploit 
tm="0"

# variable used to check in msflog for percentage
a=""

# Read Process ID for msfconsole generated by escan
PID=$(cat $defdir/pid.tmp)

# Loop start
function start(){

# Define where it should be msflog file
mlog="$defdir/msflog.log"

# Check if msfconsole pid is running
ps --pid "$PID" &>/dev/null
pd="$?"

# Start routine to grab the value "100% from msflog file"
# In case metasploit already exited then
if [ "$pd" -eq "1" ]
then

# Check if msflog file exists
if [ -f  "$mlog" ] 
then

# open the log and search in last lines the value (Scanned)"
gmsft=$(grep "Scanned" $mlog | tail -1)

# Compare output with current value of variable (a)
# At this point variable (a) should be at < (Scanned 90%) from msflog
if [ "$gmsft" != "$a" ]
then 

# In case the values are different then display that line (100%) and exit elog
echo "$gmsft"
exit 0
fi
fi
else

# In case msflog does not exists yet then start a timing process to wait for it .
# Some machines may take a while to load metasploit , and this is why this timming exists
if [ ! -f  "$mlog" ]
then

# Increase tm value + 1 from its current value
tm=$((tm+1))

# until 120s if msflog is not created then elog will exit
if [ "$tm" == "120" ]
then
echo -e "$yellow" "Metasploit Not Detected"
exit 0
else

# Timmer is not yet at 120 , pause 1 second and loop again
sleep 1
start
fi
else

# At this point msfconsole PID is running and msflog was generated to be consulted 

# gmsft will grab the last value (scanned) from msflog
gmsft=$(grep "Scanned" $mlog | tail -1)

# In case gmsft is equal to variable (a) then set variable a with same value and wait 1 second
if [ "$gmsft" == "$a" ]
then
a="$gmsft"
sleep 1

# timer value sets to 119 of 120 seconds , this way when elog ends its job it will reach 120s in 1 second and will exit itself so escan can continue its job
tm="119"

#start loop
start
else

# In case gmsft is different then variable (a) then setup a with same value
# this process avoids repeating the same percentage on screen from msflog

echo "$gmsft"
a="$gmsft"
tm="119"
sleep 1

# start loop
start
fi
fi
fi
}
start